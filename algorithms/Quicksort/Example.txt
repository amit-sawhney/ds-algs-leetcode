Initial quick sort: 
Partion:
pivot: -1

i = -1
5, 2, 7, 1, -1

j = 0
5 > -1: do nothing

j = 1
2 > -1: do nothing

j = 2
7 > -1: do nothing

j = 3
1 > -1: do nothing

swap 5 (i + 1 = 0) and -1 (high value)
Array state: -1, 2, 7, 1, 5
return i + 1 = 0

Quicksort arr from index 0 to 0 (pivot - 1) and quicksort arr from index 1 (pivot + 1) to 4

Left quicksort (0 to 0)
0 = 0 so base case is hit, return

Right quicksort (1 to 4)
1 < 4, so continue with quicksort

Parition:
pivot: 5 

i = 0
-1, 2, 7, 1, 5

j = 1
2 < 5: increase i, swap i and j
i++ --> 1
swap 1 (i) and 1 (j)
Array state: -1, 2, 7, 1, 5

j = 2
7 > 5: do nothing

j = 3
1 < 5: increase i, swap i and j
i++ --> 2
swap 2 (i) and 3 (j)
Array state: -1, 2, 1, 7, 5

swap 3 (i + 1) and 5 (high value)
Array state: -1, 2, 1, 5, 7
return i + 1 = 3

Quicksort arr from index 0 to 2 (pivot - 1) and quicksort arr from index 4 (pivot + 1) to 4

Left quicksort (0 to 2)

Parition:
pivot = 1

i = -1
-1, 2, 1, 5, 7

j = 0
-1 < 1: increase i, swap i and j
i++ --> 0
swap 0 (i) and 0 (j)
-1, 2, 1, 5, 7

j = 1
2 > 1: do nothing

swap 2 (i + 1) and 1 (high value)
Array state: -1, 1, 2, 5, 7
return i + 1 = 1

Right quicksort (4 to 4)
4 = 4, so base case is it, return

Quicksort arr from index 0 to 0 (pivot - 1) and quicksort arr from index 2 (pivot + 1) to 4
Note: At this point, quicksort will continue on but will not make any swaps. It will eventually hit
      all base cases because the array is sorted.